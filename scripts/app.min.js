var app;!function(t){"use strict";function e(t,e){angular.module(t,e)}function o(t,e,o){angular.module(t).controller(e,o)}function r(t,e,o){angular.module(t).provider(e,o)}function n(t,e,o){angular.module(t).service(e,o)}function i(t,e,o){angular.module(t).factory(e,o)}function p(t,e){angular.module(t).config(e)}function a(t,e,o){angular.module(t).directive(e,o)}t.addModule=e,t.addController=o,t.addProvider=r,t.addService=n,t.addFactory=i,t.addConfig=p,t.addDirective=a,angular.module("app",["ngAria","ngMessages","ngMaterial","app.repo","app.templates"])}(app||(app={}));var app;!function(t){var e;!function(){"use strict";t.addModule("app.repo",["app.common.storage","app.common.github","ui.router"])}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){var o;!function(){"use strict";t.addModule("app.common.storage",[])}(o=e.storage||(e.storage={}))}(e=t.common||(t.common={}))}(app||(app={}));var app;!function(t){var e;!function(e){var o;!function(){"use strict";t.addModule("app.common.github",[])}(o=e.github||(e.github={}))}(e=t.common||(t.common={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var o=function(){function t(t,e,o){this.$state=t,this.$timeout=e,this.StorageService=o,this.config={token:this.StorageService.getItem("githubToken"),repos:this.StorageService.getItem("githubRepos")},this.rows=this.config.repos?this.config.repos.length:1}return t.prototype.getRows=function(t){return new Array(t)},t.prototype.addRow=function(){this.rows++},t.prototype.removeRow=function(){this.rows<1||(this.rows--,delete this.config.repos[this.rows])},t.prototype.showError=function(t,e){return t[e].$dirty&&t[e].$invalid||t.$submitted},t.prototype.submit=function(t){var e=this,o=[];this.StorageService.setItem("githubToken",t.token),angular.forEach(t.repos,function(t){o.push({owner:t.owner,name:t.name})}),this.StorageService.setItem("githubRepos",o),this.$timeout(function(){e.$state.go("repo")},500)},t.prototype.cancel=function(){this.$state.go("repo")},t}();e.RepoConfigController=o,t.addController("app.repo","RepoConfigController",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var o=function(){function t(t,e,o){this.$state=t,this.GithubService=e,this.StorageService=o,this.repos={},this.reposToList=[],this.token=o.getItem("githubToken"),this.reposToList=o.getItem("githubRepos")||[],this.token&&this.reposToList?this.loadRepos():this.$state.go("repo.config")}return t.prototype.loadRepos=function(){var t=this;this.reposToList.forEach(function(e){t.GithubService.getRepo(e.owner,e.name).then(function(o){t.repos[e.name]=o})})},t}();e.RepoController=o,t.addController("app.repo","RepoController",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var o=function(){function t(t,e){this.$scope=t,this.GithubService=e,this.repo=t.repo,this.loadRepoForks(),this.loadRepoIssues()}return t.prototype.loadRepoForks=function(){var t=this;this.GithubService.getRepoForks(this.repo.owner.login,this.repo.name).then(function(e){t.repo.forks=e})},t.prototype.loadRepoIssues=function(){var t=this;this.GithubService.getRepoIssues(this.repo.owner.login,this.repo.name).then(function(e){t.repo.issues=e.filter(function(t){return"undefined"==typeof t.pull_request}),t.repo.prs=e.filter(function(t){return"undefined"!=typeof t.pull_request})})},t}();e.RepoDirectiveController=o,t.addController("app.repo","RepoDirectiveController",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){function o(){return{restrict:"EA",scope:{repo:"="},controller:"RepoDirectiveController as vm",templateUrl:"/src/scripts/repo/repo.directive.html"}}e.RepoOverviewDirective=o,t.addDirective("app.repo","repoOverview",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(){"use strict";function e(t,e){t.state("repo",{url:"/repos",controller:"RepoController as vm",templateUrl:"/src/scripts/repo/repo.html"}).state("repo.view",{url:"/:repoOwner/:repoName",views:{"@":{controller:"RepoViewController as vm",templateUrl:"/src/scripts/repo/repo.view.html",resolve:{repo:["$stateParams","GithubService",function(t,e){return e.getRepo(t.repoOwner,t.repoName)}]}}}}).state("repo.config",{url:"/config",views:{"@":{controller:"RepoConfigController as vm",templateUrl:"/src/scripts/repo/repo.config.html"}}}),e.otherwise("/repos")}t.addConfig("app.repo",e)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var o=function(){function t(){}return t}();e.RepoService=o,t.addService("app.repo","RepoService",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){"use strict";var o=function(){function t(t){this.repo=t}return t}();e.RepoViewController=o,t.addController("app.repo","RepoViewController",o)}(e=t.repo||(t.repo={}))}(app||(app={}));var app;!function(t){var e;!function(e){var o;!function(e){"use strict";var o=function(){function t(){}return t.prototype.setItem=function(t,e){var o={data:e};localStorage.setItem(t,JSON.stringify(o))},t.prototype.getItem=function(t){var e=JSON.parse(localStorage.getItem(t));return e&&e.data?e.data:void 0},t.prototype.removeItem=function(t){localStorage.removeItem(t)},t}();e.StorageService=o,t.addService("app.common.storage","StorageService",o)}(o=e.storage||(e.storage={}))}(e=t.common||(t.common={}))}(app||(app={}));var app;!function(t){var e;!function(e){var o;!function(e){"use strict";var o=function(){function t(t,e,o){this.$http=t,this.$log=e,this.StorageService=o,this.basePath="https://api.github.com"}return t.prototype.checkToken=function(t){return this.request("GET","/user",{headers:{Authorization:"token "+t}}).then(function(t){return t.data})},t.prototype.getRepo=function(t,e){return this.request("GET","/repos/"+t+"/"+e).then(function(t){return t.data})},t.prototype.getRepoIssues=function(t,e,o){return void 0===o&&(o={}),this.request("GET","/repos/"+t+"/"+e+"/issues",{params:o}).then(function(t){return t.data})},t.prototype.getRepoForks=function(t,e,o){return void 0===o&&(o={}),this.request("GET","/repos/"+t+"/"+e+"/forks",{params:o}).then(function(t){return t.data})},t.prototype.request=function(t,e,o){void 0===o&&(o={});var r=this.StorageService.getItem("githubToken");r||this.$log.warn("Github Auth Token not set.");var n=angular.extend({},{cache:!0,method:t,url:this.basePath+e,headers:{Accept:"application/vnd.github.v3.raw+json","Content-Type":"application/json;charset=UTF-8",Authorization:"token "+r}},o);return this.$http(n)},t}();e.GithubService=o,t.addService("app.common.github","GithubService",o)}(o=e.github||(e.github={}))}(e=t.common||(t.common={}))}(app||(app={}));var app;!function(t){var e;!function(e){var o;!function(e){"use strict";function o(t){function e(e,o,r,n){n.$parsers.push(function(e){return t.checkToken(e).then(function(){n.$setValidity("validGithubToken",!0)})["catch"](function(){n.$setValidity("validGithubToken",!1)}),e})}return{restrict:"A",require:"ngModel",link:e}}e.GithubTokenValidateDirective=o,t.addDirective("app.common.github","requireValidGithubToken",o)}(o=e.github||(e.github={}))}(e=t.common||(t.common={}))}(app||(app={}));